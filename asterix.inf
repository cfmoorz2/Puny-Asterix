!% -~S
!% $OMIT_UNUSED_ROUTINES=1
!% $ZCODE_LESS_DICT_DATA=1

! The very first lines of the main source code file for a game can
! contain compiler options, like the lines above. -~S disables
! strict error checking. This is otherwise used in z5 and z8 games by
! default. While useful for debugging, it adds ~10 KB to the story file
! size and it makes the game slower.
! $OMIT_UNUSED_ROUTINES=1 makes the compiler remove all routines which
! aren't used. This can save some space.

! When compiling to z8, use the standard library instead
#Iftrue (#version_number == 8);
Constant USEINFORM;
Constant MANUAL_PRONOUNS;
Constant CUSTOM_ABBREVIATIONS;


#Endif;

Constant Story	  "The Candy Striper of St. Asterix";
Constant Headline   "^A Totally Tubular 80s IF Game by Charles Moore, Jr.^";
#Ifv5;
Constant OPTIONAL_PROVIDE_UNDO;
#Endif;
Constant DEATH_MENTION_UNDO;
Constant MAX_CARRIED 45;
Constant OPTIONAL_EXTENDED_METAVERBS;
Constant OPTIONAL_EXTENDED_VERBSET;
!Constant OPTIONAL_GUESS_MISSING_NOUN;
Constant OPTIONAL_PRINT_SCENERY_CONTENTS;
Constant MAX_FLOATING_OBJECTS 55;
Constant MSG_WAIT_DEFAULT "Time passes.";
Constant MSG_PUSHDIR_DEFAULT "You can't push that. ";
Constant MSG_SING_DEFAULT "You only sing alone in the car on the highway. ";
Constant MSG_PARSER_BAD_NUMBER "I only understand digits. No dashes, parentheses, etc. ";
Constant OPTIONAL_FULL_SCORE 2;
Constant TASKS_PROVIDED;
Constant RUNTIME_ERRORS 0;
Constant NUMBER_TASKS = 15;
Constant MAX_SCORE 140;
Array task_scores -> 10 10 10 10 5 5 5 5 5 5 5 5 10 10 10 30;
Array UUID_ARRAY string "UUID://8E0FD814-0041-4E2B-B1A1-13E42932A53F//";

Constant RADIATOR_DESC "It's a cast-iron steam radiator. It's hissing and knocking in a vain struggle against the chill.^";
Constant RADIATOR_TOUCH "I guess third-degree burns are your thing?^";
Constant ELEVATOR_PROSE "The elevator door slides closed. The little light on the card reader turns green and you feel the
    elevator moving beneath you.^";
Constant MAIN_ELEVATOR_PROSE "The elevator doors slide closed. The button lights and you hear mechanical humming from the elevator shaft.^";
Constant SINGLE_BUTTON_PANEL "It's a small panel embedded in the wall next to the elevator doors. It contains a single button.^";
Constant FREDDY_WAKES "^Freddy stirs and wakes in a daze.^^~Dude, what happened? Man, did I stroke out grooving to the Aussies?~ 
    He hands back your walkman.^";
Constant BATHROOM_OCCUPIED "There's a small red sign embedded above the doorknob reading ~Occupied~.";
Constant BATHROOM_VACANT "There's a small green sign embedded above the doorknob reading ~Vacant~.";

Attribute valuable;
Attribute encountered;

Release 1;
Serial "241130";

!Constant INITIAL_LOCATION_VALUE = mri_anteroom;
!Constant INITIAL_LOCATION_VALUE = elevator_lobby_2;
Constant INITIAL_LOCATION_VALUE = admin_hallway;

Constant CUSTOM_PLAYER_OBJECT selfobj;

#Ifndef USEINFORM;

Include "globals.h";
Global elevator_level = 0;
Global elevator_call_level;
Global elevator_active = false;
Global service_elevator_level = 0;
Global service_elevator_call_level = 2;
Global service_elevator_active = false;
Global SAFE_1;
Global SAFE_2;
Global SAFE_3;
Global SAFE_CURRENT;
Global SAFE_CYCLE 0;
Global walkman_playing = false;
Global SIGNATURE_COUNT 0;

Constant FLAG_COUNT 19;

Constant F_BADDIES_FOLLOWING 6; !baddies are following at endgame
Constant F_FREDDY_ASLEEP 7;
Constant F_WALKMAN_BLOCKING 8;
Constant F_HAVE_MET_VIC 9; ! vic has been encountered?
Constant F_HAS_SWIPE_CARD 10; !does the player have the  security card
Constant F_SAFE_IS_OPEN 11; !is jorry's safe open
Constant F_HEADPHONES_ARE_UNPLUGGED 12; ! headphones are NOT plugged in
Constant F_FREDDY_WALKMAN_SHY 13; !freddy won't take the walkman a second time
Constant F_FREDDY_HAS_HEARD_THRILLER 14; !he's already heard it
Constant F_SAFE_COMBO_IS_SET 15; ! safe combination has been set
Constant F_SERVICE_ELEVATOR_ON 16; ! is the service elvator working?
Constant F_ENDGAME 17; ! in endgame
Constant F_COMBO_HAS_BEEN_HEARD 18; ! the combination has been heard on green tape
Constant F_TRIO_IS_FOLLOWING 19; 

Constant MSG_WEAR_DEFAULT 1000;
Constant MSG_FULLSCORE_ACTIONS 1001;

[ DeathMessage; 
    if (deadflag == 3) print"You are doomed to summer school";
];

[LibraryMessages p_msg p_arg_1 p_arg_2;
    p_arg_1 = p_arg_2;
    switch(p_msg) {
    
    MSG_WEAR_DEFAULT:
        if(noun == walkman) "You slip the headphones over your ears. ";
        print_ret "You are now wearing ",(the)noun,".";
    MSG_DISROBE_DEFAULT:
        if (noun == walkman) "You remove the headphones. ";
        "You take off ", (the) noun, ".";
    MSG_FULLSCORE_ACTIONS :
        "- getting your letter";
    }
];

[ PrintTaskName task_number;
  switch (task_number) {
      0: "- getting the flashlight";
      1: "- getting the swipe card";
      2: "- finding the syringe";
      3: "- getting the potassium vial";
      4: "- getting the dull steel key";
      5,6,7,8,9,10,11,12: "- getting a signature";
      13: "- finding the green cassette tape";
      14: "- opening the safe";
      15: "- getting the ledger";
      16: "- getting your letter";
  }
];

[ChooseObjects obj code;
    obj = obj;
    if (code == 2)
    {
        if (action == ##wear && obj == walkman) return 0;
        if (action == ##plugin && obj == dummy_headphones) return 2;
        if (action == ##flip && obj in walkman && obj ofclass tape) return 2; 
        if (action == ##push && (IndirectlyContains(player, obj)) == true) return 0;
        if (action == ##push && (~~obj ofclass Button)) return 0;
    }

    if(code < 2)   {
        if (obj has scenery) return 2;
        if (action == ##take && obj in player) return 2;
        if (action == ##take && obj == player) return 2;
        !if (action ==##take && parent(obj) has container) return 2;
        if(action == ##drop or ##insert or ##puton or ##drop) if(obj notin actor) return 2;
    }
];

[ GamePreRoutine ;
    if (action == ##give || action == ##show) 
    {
        if (IndirectlyContains(real_location, second) == false)
        {
            print(The)second;
            if (second has pluralname) " aren't here. "; " isn't here. ";
        }
    }
    if (action == ##listen && walkman has worn && walkman_playing && walkman in player && FlagIsClear(F_HEADPHONES_ARE_UNPLUGGED))
        "You're currently listening to your walkman. ";
    rfalse;
];

#Ifv5;
[ BeforeParsing x local_parse;
    local_parse = parse;
    for (wn=2 : wn<local_parse->1 : wn++)
    if (buffer->(local_parse->(4*wn + 1)) == '.' &&
    local_parse-->(2*wn - 3) == 'dr' or 'mr' or 'mrs' or 'ms' && local_parse-->(2*wn + 1) == 'chen' or 'johnson' 
        or 'winston' or 'northrup' or 'parsons') {
    buffer->(local_parse->(4*wn + 1)) = ' ';
    x++;
    }
    if (x) @tokenise buffer parse;
    ];
#Endif;

Global following = false;

[ InScope p_actor direction npc k final i obj;
    objectloop (i ofclass Item && IndirectlyContains(real_location, i))
    {
        if (balloon.tied_to == i) { PlaceInScope(balloon); break; }
    }
    objectloop(direction in compass)
    {
        !if (k = location.(direction.door_dir))
        k = real_location.(direction.door_dir);
        if (k == 0) continue;
        if (k has door) final = DoorTo(k); else final = k;
        objectloop (npc in final)
        {
        if (npc ofclass Mover) PlaceInScope(npc);
        } 
    }
    if (real_location == ceiling_05 && northrup in northrup_office) 
    {
        objectloop (obj in northrup_office)
            PlaceInScope(obj);
    }
    p_actor = 0;
    rfalse;
];

Include "ext_cheap_scenery.h";
Include "ext_talk_menu.h";
Include "puny.h";

[ Initialise r temp;
    intro();
    LookModeLongSub();
    r = random(10);
    SetTime(21 * 60 + r, 1); ! 1:05 am, each turn 5 minutes
    winston.move_mode = WANDER_PATH;
    StartDaemon(winston);
    freddy.move_mode = WANDER_PATH;
    StartDaemon(freddy);
    elliot.move_mode = WANDER_PATH;
    StartDaemon(elliot);
    eugene.move_mode = WANDER_PATH;
    StartDaemon(eugene);
    StartDaemon(nurse_retch);
    player.orders = MyTakeRule;
    move form to player;
    move pen to player;
    move mixtape to backpack;
    move thriller to backpack;
    move walkman to backpack;
    move backpack to player;
    give backpack worn;
    move ledger to player;
    SAFE_CURRENT = random(35);
    temp = UUID_ARRAY; !to quiet a compiler warning
];

Include "abbreviations.h";
Include "my_grammar.h";
Include "compass.h";
Include "pathfinder.h";
Include "rooms.h";
Include "conversations.h";
Include "npcs.h";
Include "items.h";
Include "elevator.h";
Include "dumbwaiter.h";
Include "service_elevator.h";
Include "ext_flags.h";


Object selfobj "you"
	with
		name 'me' 'myself' 'self',
		short_name  "yourself",
		description "You're a seventeen-year-old teenage girl. You're wearing a red-and-white pinstriped 
        candy striper uniform and your favorite black-and-white checkerboard Vans. ",
		before NULL,
		after NULL,
		life NULL,
		each_turn NULL,
		describe NULL,
		add_to_scope 0,
		capacity MAX_CARRIED,
		parse_name 0,
		orders 0,
		number 0,
	has concealed animate proper transparent;

#Endif;

#Ifdef USEINFORM;

Include "Parser";
Include "VerbLib";

#Endif;

! ============================================================================ !

[open_or_closed door;
    if (door has open) print "open"; else print "closed";
];

[ freddy_wakes_up ;
    print(string)FREDDY_WAKES;
    ClearFlag(F_FREDDY_ASLEEP);
    SetFlag(F_FREDDY_WALKMAN_SHY);
    move walkman to player;
    scope_modified = true;
    StartDaemon(freddy);
];

!!! THE SIGNATURE ARRAY HAS 17 SLOTS TO MATCH THE ACHIEVEMENT ARRAY. 5-11 ARE DEVOTED TO SIGNATURES
[ show_signatures x i k;
    for (x=5 : x<13: x++)
    {
        i = signatures-->x;
        k = signatures-->(x+1);
        if (k==0) { print(name)i; rtrue;}
        print(name)i,", ";
    }
];

[ check_signature npc x i;
    for (x=5 : x < 13: x++)
    {
        i = signatures-->x;
        if (i == npc) { print(The)npc," has already signed your form.^"; return true; }
    }
    return false;
];

[ add_signature npc i o; 
    !print"SIGNATURE_COUNT = ",SIGNATURE_COUNT,"^";
    if (SIGNATURE_COUNT == 8) "Your signature form is already complete. ";
    if (pen notin player) "You need a pen. ";
    if (check_signature(npc) == true) rtrue;
    for (i=5 : i < 13: i++)
    {
        o = signatures-->i;
        !print"LAST SIGNATURE = ",(name)o," AT INDEX ",i,"^";
        if (o == 0) 
        {
            npc.signature_desc();
            signatures-->i = npc;
            Achieved(i);
            SIGNATURE_COUNT++;
            rtrue;
        }
    }
    #IfDef DEBUG;
    "ERROR_SIGNATURE_ADD";
    #Endif;
];

[MyTakeRule count i x ;
    if (action == ##go && location == thedark)
    {
        if (real_location == ceiling_01 && selected_direction == d_to) rfalse;
            "It's impossible to crawl around up here in the dark. ";
    }
    if (action ~= ##take) rfalse;
    if (~~noun provides mass) rfalse;
    count = 0;
    x = noun.mass;
    objectloop(i in player && i hasnt worn) {
        count = count + i.mass;
    }
    !print"carrying = ",count,"^";
    !print"mass = ",x,"^";
    if((count + x) > MAX_CARRIED) "That's too much for you to carry. ";
    rfalse;
];

[ intro;
    "One more night. One more cold winter night. It's been a painful four weeks but you're SO close you can taste it. And then 
    Mr. Rogers, your Ethics teacher can suck it.^^
    You're going to be a senior and you have BIG plans coming up this summer. Tiffany is going to be life-guarding at the pool 
    and she's promised to get you a cushy job at the snack bar. You'll spend your working days surrounded by cute boy lifeguards and your 
    off-time at the mall.^^
    But then your grades started to slip and, inconceivably, the topic of summer school has come up. To avoid this, 
    you took Ethics 101 this semester, an easy ~A~. But, in order to pass, you have to perform some sort of volunteer activity for four long
    painful weeks. 
    The concept of mandatory volunteerism seems odd to you but, nonetheless, here you are, working as a candy striper at St. Asterix 
    Hospital, the oldest and most run-down hospital in the city.^^
    It hasn't been too bad. You mainly do busy work: delivering flowers, passing out magazines, getting patients their slippers or whatnot. 
    Tonight's your last night and 
    your sponsor at the hospital, Mr. Jorry, was going to give you a letter confirming your volunteer hours after you also get 
    the signatures of 8 patients and staff. But, rudely, Mr. Jorry has been found dead in his office. And, even worse, a 
    blizzard blew in tonight and now it doesn't seem like you can even get home.^^
    Mr. Jorry may have been killed and the killer may still be in the building, trapped inside by the storm. But, more importantly, 
    you are NOT going to summer school this year and you'll unmask a murderer if you have to in order to get those signatures and 
    that letter. ";
];    

[ init_safe ;
    SAFE_1 = random(35);
    SAFE_2 = random(35);
    SAFE_3 = random(35);
    SAFE_CURRENT = random(35);
    !SAFE_1 = 1;
    !SAFE_2 = 2;
    !SAFE_3 = 3;
    !"^combo = ",SAFE_1,", ",SAFE_2,", ",SAFE_3,".^";
];

[ DialPhone ;
    print"You dial the phone...^";
    print (string) random(
    "You seem to have reached the local weather line. You learn that there's a blizzard outside. ",
    "You seem to have reached a local movie theater. You are pleased to hear that ~Doctor Detroit~ will be playing 
    tomorrow at 3:30, 6:15, 9:24, and 11:14pm. ",
    "You seem to have reached a pizza parlor one town over. The person on the other end snippily informs you that they are not currently 
    delivering due to the blizzard conditions. He also asks if you are insane. ",
    "You seem to have reached an adult-oriented phone chat service. While somewhat curious, you, unfortunately, don't have a
    credit card yet. ",
    "You hear a recording on the other end. You have reached the ~Lapsed Amish~ support line. ");
];

[ mri_handler; 
    switch (real_location) {
        mri_anteroom, changing_room: 
            print"^The mechanical whining from the MRI scanner next door suddenly changes in pitch and becomes 
            louder. You hear mechanical 'thumping' and 'banging' noises. ";
            if (oxygen_cart in mri_scanner)
            {
                mri_scanner.room_is_trashed = true;
                print"^^Suddenly, the mechanical banging changes into the sound of metal crashing into metal, plastic, 
                and plaster. You can only guess that the oxygen cannisters in the scanner room are now heavy
                high-speed projectiles being tossed around wildly in the powerful magnetic field of the MRI scanner. ";
                if (trio in mri_scanner) 
                {
                    print"^^You also hear screaming as well as the occasional soft 'thud' of one of the cannisters slamming into 
                    some poor (deserving) victim in the next room. ";
                    remove trio;
                    trio.move_mode = 0;
                    StopDaemon(trio);
                    move injured_trio to mri_scanner;
                    move ledger to mri_scanner;
                    move holes to mri_scanner;
                    StopDaemon(player_trio_daemon);
                }
                print"^^You hear a final 'crash' and the mechanical screaming suddenly and abruptly comes to a stop. ";
                if (injured_trio notin mri_scanner) 
                {
                    move holes to mri_scanner;
                    move oxygen_cannisters to mri_scanner;
                    "You can't help but feel that you've perhaps done irreversible harm to your cause. ";
                }
            }
        mri_scanner:
            print"^^The mechanical whining from the MRI scanner quickly changes in pitch and becomes louder.
            You hear loud 'thumping' and 'banging' noises coming from the scanner and the walls around you. ";
            if (oxygen_cart in mri_scanner)
            {
                mri_scanner.room_is_trashed = true;
                print"^^Suddenly, to your horror, you notice that the metal oxygen cannisters are shaking and dancing 
                on the cart and, as the MRI winds up to full power, they begin to lift up and suddenly fly about the room. ";
                if (trio in mri_scanner) 
                {
                    print"^^Your pursuers come to the same realization all too late and the four of you are sitting ducks, 
                    pummeled by the oxygen cannisters now turned into high-speed projectiles in the powerful 
                    magnetic field. ";
                } else {
                    print"^^You throw your arms up in a vain attempt to sheild yourself from the flying missiles but
                    it's no use as they pummel you mercillessly. ";
                }
                print"^^You are knocked unconsious but survive your ordeal. However, you require several weeks to recover, 
                guaranteeing that you won't be able to graduate on time and landing you in summer school after all,
                a fate worse than death. "; 
                deadflag = 3;
                rtrue;
            } else { 
                "^^After a moment, the banging stops and the mechanical whining winds down to its former pitch and volume. ";
            }
    }
];

[ trio_catch;
    print"^Northrup, Retch, and Vic catch up with and surround you. They advance on you ominously. Retch rips the ledger 
        from you and Vic pulls a switchblade from a pocket and giggles. Northrup pulls a letter from a pocket: your letter of completion! 
        To your relief, he takes the knife from Vic. But, then, to your dismay, he uses it to slash into the letter, cutting it to ribbons. 
        ^^The three walk away, knowing that no one will believe a candy striper with no evidence.^";
        deadflag = 3;
        rtrue;
];

[ trio_discover;
    print"^You suddenly find yourself face to face with the very angry trio of Northrup, Retch, and Vic. ";
    if (ledger in player) print"Retch rips the ledger from you and passes it off to Northrup. ";
    print"Vic, giggling oddly, steps toward you and pulls a switchblade from a pocket. Northrup pulls a letter from a pocket: 
    your letter of completion! To your relief, Northrup takes the knife from Vic. But, then, to your dismay, he 
    uses the knife to slash into the letter, cutting it to ribbons. ^^The three walk away, knowing that no one 
    will believe a candy striper with no evidence.^";
    deadflag = 3;
    rtrue;
];

[ trio_final;
    print"The angry trio have lost patience and advance on you. ";
    if (ledger in player) print"Retch rips the ledger from you and passes it off to Northrup. ";
    print"Vic, giggling oddly, steps toward you and pulls a switchblade from a pocket. Northrup pulls a letter from a pocket: 
    your letter of completion! To your relief, Northrup takes the knife from Vic. But, then, to your dismay, he 
    uses the knife to slash into the letter, cutting it to ribbons. ^^The three walk away, knowing that no one 
    will believe a candy striper with no evidence.^";
    deadflag = 3;
    rtrue;
];

Object player_trio_daemon
    with
        daemon [ ;
            if (trio in real_location)
            {
                trio_discover();
            }
    ];
        
#Ifdef USEINFORM;
Include "Grammar";
#Endif;

!Verb 'hang'	 * held 'on' noun	-> PutOn;

! ============================================================================ !
